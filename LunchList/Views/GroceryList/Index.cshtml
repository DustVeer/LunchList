@using LunchList.DTO;
@model HistoryViewModel


<!-- Filter form based on Grocery Lists -->
<form method="get" action="">
    <label for="selectedGroceryListId">Select Grocery List:</label>
    @Html.DropDownList("selectedGroceryListId", (IEnumerable<SelectListItem>)ViewBag.GroceryListSelect, new { @class = "form-control" })
    <button type="submit">Filter</button>
</form>


<!-- Form to add a new Grocery List -->
<!-- Notice: Avoid nesting forms. You may place a separate form outside or handle submission via AJAX -->
<form method="POST" asp-action="Add">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#popupModal">
        Add new list
    </button>

    <!-- Modal -->
    <div class="modal fade" id="popupModal" tabindex="-1" aria-labelledby="popupModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="popupModalLabel">Insert Your Data</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- This inner form is optional; you can also remove it if the outer form handles the submission -->
                    <div class="mb-3">
                        <label for="insertField" class="form-label">Your Input:</label>
                        <input type="text" class="form-control" id="insertField" name="name" placeholder="Enter new name">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <!-- This button submits the outer form -->
                    <button type="submit" class="btn btn-primary" id="submitPopup">Submit</button>
                </div>
            </div>
        </div>
    </div>
</form>

<h2>Grocery Items</h2>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Is Checked</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.GroceryItems)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.RetailerProductName</td>
                <td>@item.Quantity</td>
                <td> <input type="checkbox" disabled @(item.Is_Checked ? "checked" : "") /> </td>
            </tr>
        }
    </tbody>
</table>
<<<<<<< Updated upstream

=======
<form method="post" asp-action="SetDone">
    <input type="submit" class="btn btn-primary"  value="Set To Done" />
    <input type="hidden" name="id" value="@ViewBag.selectedgroceryListId" />
    </form>
>>>>>>> Stashed changes
